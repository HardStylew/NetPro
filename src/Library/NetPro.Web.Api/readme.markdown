
## NetPro.Web.Api使用
 [![NuGet](https://img.shields.io/nuget/v/NetPro.Web.Api.svg)](https://nuget.org/packages/NetPro.Swagger)

封装了基本asp.netcore webapi工程需要的基本功能

### 安装

* Package Manager方式:
 `Install-Package NetPro.Web.Api -Version 3.1.2`

* .NET CLI 方式: 
`dotnet add package NetPro.Web.Api --version 3.1.2`

* PackageReference:
`<PackageReference Include="NetPro.Web.Api" Version="3.1.2" />`

* .NET CLI 方式:
 `paket add NetPro.Web.Api --version 3.1.2`

#### 注意

引用程序集会自动注入相关服务，无需再进行Service.Add..();

### 使用

#### appsetting.json

```json


```

内置中间件与系统中间件的映射关系：
```csharp

public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
{
	
    app.UseExceptionHandler();   //对应ErrorHandlerStartup
    
	// your code
	...//此区间请求管道上的Order取值 范围0-100

    app.UseStaticFiles();        //对应StaticFilesStartup

	// your code
	...//此区间请求管道上的Order取值 范围101-200

    app.UseRouting();            //对应RoutingStartup

    // your code
	...//此区间请求管道上的Order取值 范围200-1000

    app.UseEndpoints(endpoints =>//对应EndpointsStartup
    {
        endpoints.MapRazorPages();
    });
}
```
考虑到灵活性，Netpro.Web.APi不包含UseEndpoints处理，如果不是通过脚手架生成NetPro项目，需要手动增加以下文件`EndpointsStartup.cs`到项目中
```csharp
// <auto-generated>
//  UseEndpoints   
// </auto-generated>

using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace NetPro.Web.Api
{
    /// <summary>
    /// Endpoints 
    /// </summary>
    public class EndpointsStartup : INetProStartup
    {
        /// <summary>
        /// 
        /// </summary>
        /// <param name="services"></param>
        /// <param name="configuration"></param>
        /// <param name="typeFinder"></param>
        public void ConfigureServices(IServiceCollection services, IConfiguration configuration, TypeFinder.ITypeFinder typeFinder)
        {

        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="application"></param>
        public void Configure(IApplicationBuilder application)
        {
            application.UseEndpoints(s =>
            {
                s.MapControllers();//add other operation
            });
        }

        /// <summary>
        /// UseEndpoints should be loaded last
        /// </summary>
        public double Order { get; set; } = 1000;
    }
}

```
