2020-05-04 13:54:40.408 +08:00 [DBG] Hosting starting
2020-05-04 13:54:40.704 +08:00 [DBG] Failed to locate the development https certificate at 'null'.
2020-05-04 13:54:40.714 +08:00 [INF] Now listening on: http://localhost:5000
2020-05-04 13:54:40.715 +08:00 [DBG] Loaded hosting startup assembly Test.Demo.Api
2020-05-04 13:54:40.720 +08:00 [DBG] Executing HealthCheck collector HostedService.
2020-05-04 13:54:40.743 +08:00 [DBG] Connection id "0HLVFTUHG9B44" received FIN.
2020-05-04 13:54:40.746 +08:00 [DBG] Connection id "0HLVFTUHG9B44" accepted.
2020-05-04 13:54:40.748 +08:00 [DBG] Connection id "0HLVFTUHG9B44" started.
2020-05-04 13:54:40.752 +08:00 [INF] Entity Framework Core 3.1.3 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-05-04 13:54:40.765 +08:00 [DBG] Connection id "0HLVFTUHG9B44" sending FIN because: "The client closed the connection."
2020-05-04 13:54:40.766 +08:00 [DBG] Connection id "0HLVFTUHG9B44" disconnecting.
2020-05-04 13:54:40.770 +08:00 [DBG] Connection id "0HLVFTUHG9B44" stopped.
2020-05-04 13:54:40.853 +08:00 [DBG] queryContext => new QueryingEnumerable<HealthCheckConfiguration>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache, 
    null, 
    null, 
    Func<QueryContext, DbDataReader, ResultContext, int[], ResultCoordinator, HealthCheckConfiguration>, 
    HealthChecks.UI.Core.Data.HealthChecksDb, 
    DiagnosticsLogger<Query>
)
2020-05-04 13:54:40.870 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:40.875 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:40.876 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:40.877 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:40.884 +08:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:54:40.892 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:54:40.896 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckConfiguration' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:40.901 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:40.902 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:40.903 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:40.912 +08:00 [INF] Start processing HTTP request GET "http://localhost:5000/health"
2020-05-04 13:54:40.918 +08:00 [VRB] Request Headers:

2020-05-04 13:54:40.922 +08:00 [INF] Sending HTTP request GET "http://localhost:5000/health"
2020-05-04 13:54:40.924 +08:00 [VRB] Request Headers:

2020-05-04 13:54:40.978 +08:00 [DBG] Connection id "0HLVFTUHG9B45" accepted.
2020-05-04 13:54:40.979 +08:00 [DBG] Connection id "0HLVFTUHG9B45" started.
2020-05-04 13:54:40.981 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-05-04 13:54:40.982 +08:00 [INF] Hosting environment: Development
2020-05-04 13:54:40.982 +08:00 [INF] Content root path: F:\自己代码库\NetPro\src\Test.Demo.Api
2020-05-04 13:54:40.982 +08:00 [DBG] Hosting started
2020-05-04 13:54:41.011 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/health  
2020-05-04 13:54:41.019 +08:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2020-05-04 13:54:41.020 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.029 +08:00 [DBG] The request path /health does not match a supported file type
2020-05-04 13:54:41.105 +08:00 [DBG] The request path  does not match the path filter
2020-05-04 13:54:41.111 +08:00 [DBG] Running health checks
2020-05-04 13:54:41.115 +08:00 [DBG] Running health check redis
2020-05-04 13:54:41.445 +08:00 [DBG] Connection id "0HLVFTUHG9B46" accepted.
2020-05-04 13:54:41.447 +08:00 [DBG] Connection id "0HLVFTUHG9B46" started.
2020-05-04 13:54:41.448 +08:00 [DBG] Connection id "0HLVFTUHG9B47" accepted.
2020-05-04 13:54:41.448 +08:00 [DBG] Connection id "0HLVFTUHG9B47" started.
2020-05-04 13:54:41.455 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs  
2020-05-04 13:54:41.455 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.455 +08:00 [DBG] The request path /docs does not match a supported file type
2020-05-04 13:54:41.525 +08:00 [DBG] Connection id "0HLVFTUHG9B47" completed keep alive response.
2020-05-04 13:54:41.531 +08:00 [INF] Request finished in 75.4642ms 301 
2020-05-04 13:54:41.552 +08:00 [DBG] Health check redis completed after 433.5321ms with status "Healthy" and 'null'
2020-05-04 13:54:41.563 +08:00 [DBG] Health check processing completed after 448.4546ms with combined status "Healthy"
2020-05-04 13:54:41.578 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/index.html  
2020-05-04 13:54:41.578 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.594 +08:00 [DBG] The request path /docs/index.html does not match an existing file
2020-05-04 13:54:41.611 +08:00 [DBG] Connection id "0HLVFTUHG9B45" completed keep alive response.
2020-05-04 13:54:41.612 +08:00 [INF] Request finished in 601.7124ms 200 application/json
2020-05-04 13:54:41.621 +08:00 [DBG] Connection id "0HLVFTUHG9B47" completed keep alive response.
2020-05-04 13:54:41.622 +08:00 [INF] Request finished in 43.3037ms 200 text/html;charset=utf-8
2020-05-04 13:54:41.659 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/swagger-ui.css  
2020-05-04 13:54:41.659 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.659 +08:00 [DBG] The request path /docs/swagger-ui.css does not match an existing file
2020-05-04 13:54:41.660 +08:00 [DBG] Connection id "0HLVFTUHG9B48" accepted.
2020-05-04 13:54:41.660 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/custom.css  
2020-05-04 13:54:41.660 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.660 +08:00 [DBG] The request path /custom.css does not match an existing file
2020-05-04 13:54:41.660 +08:00 [DBG] Connection id "0HLVFTUHG9B49" accepted.
2020-05-04 13:54:41.660 +08:00 [DBG] The request path  does not match the path filter
2020-05-04 13:54:41.663 +08:00 [VRB] Range header's value is empty.
2020-05-04 13:54:41.664 +08:00 [DBG] Connection id "0HLVFTUHG9B48" started.
2020-05-04 13:54:41.664 +08:00 [DBG] Connection id "0HLVFTUHG9B49" started.
2020-05-04 13:54:41.664 +08:00 [INF] Received HTTP response after 736.9311ms - "OK"
2020-05-04 13:54:41.664 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/swagger-ui-standalone-preset.js  
2020-05-04 13:54:41.664 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/swagger-ui-bundle.js  
2020-05-04 13:54:41.664 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.664 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.664 +08:00 [DBG] The request path /docs/swagger-ui-standalone-preset.js does not match an existing file
2020-05-04 13:54:41.664 +08:00 [DBG] The request path /docs/swagger-ui-bundle.js does not match an existing file
2020-05-04 13:54:41.664 +08:00 [VRB] Range header's value is empty.
2020-05-04 13:54:41.664 +08:00 [VRB] Range header's value is empty.
2020-05-04 13:54:41.696 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:54:40 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:54:41.697 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2020-05-04 13:54:41.697 +08:00 [DBG] Connection id "0HLVFTUHG9B47" completed keep alive response.
2020-05-04 13:54:41.698 +08:00 [INF] Request finished in 39.0233ms 200 text/css
2020-05-04 13:54:41.698 +08:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2020-05-04 13:54:41.698 +08:00 [DBG] Connection id "0HLVFTUHG9B49" completed keep alive response.
2020-05-04 13:54:41.698 +08:00 [INF] Request finished in 33.9247ms 200 application/javascript
2020-05-04 13:54:41.698 +08:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2020-05-04 13:54:41.698 +08:00 [DBG] Connection id "0HLVFTUHG9B48" completed keep alive response.
2020-05-04 13:54:41.698 +08:00 [INF] Request finished in 34.192ms 200 application/javascript
2020-05-04 13:54:41.698 +08:00 [DBG] No candidates found for the request path '/custom.css'
2020-05-04 13:54:41.698 +08:00 [DBG] Request did not match any endpoints
2020-05-04 13:54:41.699 +08:00 [INF] End processing HTTP request after 788.6513ms - "OK"
2020-05-04 13:54:41.701 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:54:40 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:54:41.708 +08:00 [DBG] Connection id "0HLVFTUHG9B46" completed keep alive response.
2020-05-04 13:54:41.708 +08:00 [INF] Request finished in 48.3588ms 404 
2020-05-04 13:54:41.903 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/v1/docs.json  
2020-05-04 13:54:41.914 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:41.950 +08:00 [DBG] The request path /docs/v1/docs.json does not match an existing file
2020-05-04 13:54:42.330 +08:00 [DBG] Connection id "0HLVFTUHG9B49" completed keep alive response.
2020-05-04 13:54:42.330 +08:00 [INF] Request finished in 427.6286ms 200 application/json;charset=utf-8
2020-05-04 13:54:42.907 +08:00 [DBG] queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<HealthCheckExecution>(
    asyncEnumerable: new QueryingEnumerable<HealthCheckExecution>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache, 
        null, 
        null, 
        Func<QueryContext, DbDataReader, ResultContext, int[], ResultCoordinator, HealthCheckExecution>, 
        HealthChecks.UI.Core.Data.HealthChecksDb, 
        DiagnosticsLogger<Query>
    ), 
    cancellationToken: queryContext.CancellationToken)
2020-05-04 13:54:42.912 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:42.912 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:42.912 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.913 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.938 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:42.940 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:42.940 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:42.940 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.943 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.948 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2020-05-04 13:54:42.951 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:42.951 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:42.952 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.953 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.953 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:42.956 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:42.956 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:42.957 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.979 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:42.980 +08:00 [DBG] Creating a new HealthReport history.
2020-05-04 13:54:43.180 +08:00 [DBG] 'HealthChecksDb' generated a temporary value for the 'Id' property of new 'HealthCheckExecution' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:43.402 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecution' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:43.408 +08:00 [DBG] 'HealthChecksDb' generated a temporary value for the 'Id' property of new 'HealthCheckExecutionEntry' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:43.418 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecutionEntry' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:43.418 +08:00 [DBG] SaveChanges starting for 'HealthChecksDb'.
2020-05-04 13:54:43.418 +08:00 [DBG] DetectChanges starting for 'HealthChecksDb'.
2020-05-04 13:54:43.452 +08:00 [DBG] DetectChanges completed for 'HealthChecksDb'.
2020-05-04 13:54:43.452 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:43.453 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:43.453 +08:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2020-05-04 13:54:43.454 +08:00 [DBG] Began transaction with isolation level 'Serializable'.
2020-05-04 13:54:43.462 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:43.462 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:43.465 +08:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 10), @p3='?', @p4='?', @p5='?' (Size = 7)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:54:43.466 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 10), @p3='?', @p4='?', @p5='?' (Size = 7)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:54:43.468 +08:00 [DBG] Foreign key property 'HealthCheckExecution.Id' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:54:43.473 +08:00 [DBG] Foreign key property 'HealthCheckExecutionEntry.HealthCheckExecutionId' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:54:43.475 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:43.476 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:43.476 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:43.476 +08:00 [DBG] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 5), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:54:43.477 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 5), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:54:43.501 +08:00 [DBG] Foreign key property 'HealthCheckExecutionEntry.Id' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:54:43.501 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:43.501 +08:00 [DBG] Committing transaction.
2020-05-04 13:54:43.529 +08:00 [DBG] Committing transaction.
2020-05-04 13:54:43.529 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:43.541 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:43.541 +08:00 [DBG] Disposing transaction.
2020-05-04 13:54:43.547 +08:00 [DBG] An 'HealthCheckExecution' entity tracked by 'HealthChecksDb' changed from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:43.549 +08:00 [DBG] An 'HealthCheckExecutionEntry' entity tracked by 'HealthChecksDb' changed from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:43.549 +08:00 [DBG] SaveChanges completed for 'HealthChecksDb' with 2 entities written to the database.
2020-05-04 13:54:43.549 +08:00 [DBG] HealthReportCollector has completed.
2020-05-04 13:54:43.571 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2020-05-04 13:54:43.572 +08:00 [DBG] 'HealthChecksDb' disposed.
2020-05-04 13:54:53.584 +08:00 [DBG] Executing HealthCheck collector HostedService.
2020-05-04 13:54:53.610 +08:00 [INF] Entity Framework Core 3.1.3 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-05-04 13:54:53.613 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:53.615 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2020-05-04 13:54:53.615 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.617 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.618 +08:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:54:53.620 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:54:53.622 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckConfiguration' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:53.623 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:53.624 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.626 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.627 +08:00 [INF] Start processing HTTP request GET "http://localhost:5000/health"
2020-05-04 13:54:53.627 +08:00 [VRB] Request Headers:

2020-05-04 13:54:53.627 +08:00 [INF] Sending HTTP request GET "http://localhost:5000/health"
2020-05-04 13:54:53.627 +08:00 [VRB] Request Headers:

2020-05-04 13:54:53.648 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/health  
2020-05-04 13:54:53.649 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:54:53.650 +08:00 [DBG] The request path /health does not match a supported file type
2020-05-04 13:54:53.654 +08:00 [DBG] The request path  does not match the path filter
2020-05-04 13:54:53.655 +08:00 [DBG] Running health checks
2020-05-04 13:54:53.657 +08:00 [DBG] Running health check redis
2020-05-04 13:54:53.659 +08:00 [DBG] Health check redis completed after 2.4285ms with status "Healthy" and 'null'
2020-05-04 13:54:53.660 +08:00 [DBG] Health check processing completed after 4.4073ms with combined status "Healthy"
2020-05-04 13:54:53.662 +08:00 [DBG] Connection id "0HLVFTUHG9B45" completed keep alive response.
2020-05-04 13:54:53.663 +08:00 [INF] Request finished in 15.0751ms 200 application/json
2020-05-04 13:54:53.674 +08:00 [INF] Received HTTP response after 46.9893ms - "OK"
2020-05-04 13:54:53.676 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:54:52 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:54:53.676 +08:00 [INF] End processing HTTP request after 49.5155ms - "OK"
2020-05-04 13:54:53.678 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:54:52 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:54:53.681 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:53.681 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:53.682 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.683 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.686 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:53.688 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:53.691 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecution' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:53.699 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecutionEntry' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:53.701 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:53.701 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.703 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.705 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2020-05-04 13:54:53.706 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:53.706 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:53.707 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.708 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.709 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:53.713 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:54:53.714 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:53.715 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.717 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.717 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-05-04 13:54:53.720 +08:00 [DBG] SaveChanges starting for 'HealthChecksDb'.
2020-05-04 13:54:53.720 +08:00 [DBG] DetectChanges starting for 'HealthChecksDb'.
2020-05-04 13:54:53.723 +08:00 [DBG] Unchanged 'HealthCheckExecution.LastExecuted' detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:54:53.725 +08:00 [DBG] An 'HealthCheckExecution' entity tracked by 'HealthChecksDb' changed from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:53.727 +08:00 [DBG] Unchanged 'HealthCheckExecutionEntry.Duration' detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:54:53.727 +08:00 [DBG] An 'HealthCheckExecutionEntry' entity tracked by 'HealthChecksDb' changed from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:53.728 +08:00 [DBG] DetectChanges completed for 'HealthChecksDb'.
2020-05-04 13:54:53.756 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.774 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:53.774 +08:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2020-05-04 13:54:53.811 +08:00 [DBG] Began transaction with isolation level 'Serializable'.
2020-05-04 13:54:54.090 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:54.090 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:54.092 +08:00 [DBG] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:54:54.095 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:54:54.098 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:54.100 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:54:54.100 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:54:54.101 +08:00 [DBG] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:54:54.104 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:54:54.104 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:54:54.106 +08:00 [DBG] Committing transaction.
2020-05-04 13:54:54.152 +08:00 [DBG] Committing transaction.
2020-05-04 13:54:54.152 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:54.164 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:54:54.164 +08:00 [DBG] Disposing transaction.
2020-05-04 13:54:54.166 +08:00 [DBG] An 'HealthCheckExecution' entity tracked by 'HealthChecksDb' changed from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:54.167 +08:00 [DBG] An 'HealthCheckExecutionEntry' entity tracked by 'HealthChecksDb' changed from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:54:54.167 +08:00 [DBG] SaveChanges completed for 'HealthChecksDb' with 2 entities written to the database.
2020-05-04 13:54:54.168 +08:00 [DBG] HealthReportCollector has completed.
2020-05-04 13:54:54.168 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2020-05-04 13:54:54.169 +08:00 [DBG] 'HealthChecksDb' disposed.
2020-05-04 13:55:04.168 +08:00 [DBG] Executing HealthCheck collector HostedService.
2020-05-04 13:55:04.173 +08:00 [INF] Entity Framework Core 3.1.3 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-05-04 13:55:04.175 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:04.177 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2020-05-04 13:55:04.179 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.180 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.182 +08:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:55:04.184 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:55:04.186 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckConfiguration' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.187 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:04.189 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.191 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.192 +08:00 [INF] Start processing HTTP request GET "http://localhost:5000/health"
2020-05-04 13:55:04.193 +08:00 [VRB] Request Headers:

2020-05-04 13:55:04.194 +08:00 [INF] Sending HTTP request GET "http://localhost:5000/health"
2020-05-04 13:55:04.194 +08:00 [VRB] Request Headers:

2020-05-04 13:55:04.208 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/health  
2020-05-04 13:55:04.209 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:55:04.211 +08:00 [DBG] The request path /health does not match a supported file type
2020-05-04 13:55:04.214 +08:00 [DBG] The request path  does not match the path filter
2020-05-04 13:55:04.214 +08:00 [DBG] Running health checks
2020-05-04 13:55:04.218 +08:00 [DBG] Running health check redis
2020-05-04 13:55:04.223 +08:00 [DBG] Health check redis completed after 6.1905ms with status "Healthy" and 'null'
2020-05-04 13:55:04.225 +08:00 [DBG] Health check processing completed after 9.9662ms with combined status "Healthy"
2020-05-04 13:55:04.227 +08:00 [DBG] Connection id "0HLVFTUHG9B45" completed keep alive response.
2020-05-04 13:55:04.228 +08:00 [INF] Request finished in 19.2308ms 200 application/json
2020-05-04 13:55:04.238 +08:00 [INF] Received HTTP response after 44.1204ms - "OK"
2020-05-04 13:55:04.239 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:55:03 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:55:04.239 +08:00 [INF] End processing HTTP request after 47.4146ms - "OK"
2020-05-04 13:55:04.239 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:55:03 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:55:04.248 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:04.249 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:04.249 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.251 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.251 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:04.256 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:04.256 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecution' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.260 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecutionEntry' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.262 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:04.284 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.285 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.285 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2020-05-04 13:55:04.310 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:04.311 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:04.312 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.312 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.312 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:04.328 +08:00 [INF] Executed DbCommand (16ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:04.329 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:04.329 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.337 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.338 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-05-04 13:55:04.338 +08:00 [DBG] SaveChanges starting for 'HealthChecksDb'.
2020-05-04 13:55:04.338 +08:00 [DBG] DetectChanges starting for 'HealthChecksDb'.
2020-05-04 13:55:04.339 +08:00 [DBG] Unchanged 'HealthCheckExecution.LastExecuted' detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:55:04.339 +08:00 [DBG] An 'HealthCheckExecution' entity tracked by 'HealthChecksDb' changed from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.340 +08:00 [DBG] Unchanged 'HealthCheckExecutionEntry.Duration' detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:55:04.340 +08:00 [DBG] An 'HealthCheckExecutionEntry' entity tracked by 'HealthChecksDb' changed from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.341 +08:00 [DBG] DetectChanges completed for 'HealthChecksDb'.
2020-05-04 13:55:04.341 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.341 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.341 +08:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2020-05-04 13:55:04.352 +08:00 [DBG] Began transaction with isolation level 'Serializable'.
2020-05-04 13:55:04.378 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:04.378 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:04.380 +08:00 [DBG] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:55:04.380 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:55:04.382 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:04.382 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:04.382 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:04.391 +08:00 [DBG] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:55:04.391 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-05-04 13:55:04.391 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:04.391 +08:00 [DBG] Committing transaction.
2020-05-04 13:55:04.429 +08:00 [DBG] Committing transaction.
2020-05-04 13:55:04.429 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.443 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:04.443 +08:00 [DBG] Disposing transaction.
2020-05-04 13:55:04.445 +08:00 [DBG] An 'HealthCheckExecution' entity tracked by 'HealthChecksDb' changed from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.445 +08:00 [DBG] An 'HealthCheckExecutionEntry' entity tracked by 'HealthChecksDb' changed from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:04.454 +08:00 [DBG] SaveChanges completed for 'HealthChecksDb' with 2 entities written to the database.
2020-05-04 13:55:04.454 +08:00 [DBG] HealthReportCollector has completed.
2020-05-04 13:55:04.454 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2020-05-04 13:55:04.454 +08:00 [DBG] 'HealthChecksDb' disposed.
2020-05-04 13:55:06.774 +08:00 [INF] Application is shutting down...
2020-05-04 13:55:06.777 +08:00 [DBG] Hosting stopping
2020-05-04 13:55:06.810 +08:00 [DBG] Connection id "0HLVFTUHG9B45" disconnecting.
2020-05-04 13:55:06.810 +08:00 [DBG] Connection id "0HLVFTUHG9B47" disconnecting.
2020-05-04 13:55:06.810 +08:00 [DBG] Connection id "0HLVFTUHG9B46" disconnecting.
2020-05-04 13:55:06.810 +08:00 [DBG] Connection id "0HLVFTUHG9B48" disconnecting.
2020-05-04 13:55:06.810 +08:00 [DBG] Connection id "0HLVFTUHG9B49" disconnecting.
2020-05-04 13:55:06.817 +08:00 [DBG] Connection id "0HLVFTUHG9B46" stopped.
2020-05-04 13:55:06.817 +08:00 [DBG] Connection id "0HLVFTUHG9B49" stopped.
2020-05-04 13:55:06.817 +08:00 [DBG] Connection id "0HLVFTUHG9B47" stopped.
2020-05-04 13:55:06.817 +08:00 [DBG] Connection id "0HLVFTUHG9B48" stopped.
2020-05-04 13:55:06.817 +08:00 [DBG] Connection id "0HLVFTUHG9B45" stopped.
2020-05-04 13:55:06.818 +08:00 [DBG] Connection id "0HLVFTUHG9B47" sending FIN because: "The Socket transport's send loop completed gracefully."
2020-05-04 13:55:06.860 +08:00 [DBG] Connection id "0HLVFTUHG9B49" sending FIN because: "The Socket transport's send loop completed gracefully."
2020-05-04 13:55:06.869 +08:00 [DBG] Connection id "0HLVFTUHG9B45" sending FIN because: "The Socket transport's send loop completed gracefully."
2020-05-04 13:55:06.869 +08:00 [DBG] Connection id "0HLVFTUHG9B46" sending FIN because: "The Socket transport's send loop completed gracefully."
2020-05-04 13:55:06.869 +08:00 [DBG] Connection id "0HLVFTUHG9B48" sending FIN because: "The Socket transport's send loop completed gracefully."
2020-05-04 13:55:07.023 +08:00 [DBG] Hosting stopped
2020-05-04 13:55:52.891 +08:00 [DBG] Hosting starting
2020-05-04 13:55:54.064 +08:00 [DBG] Failed to locate the development https certificate at 'null'.
2020-05-04 13:55:54.074 +08:00 [INF] Now listening on: http://localhost:5000
2020-05-04 13:55:54.075 +08:00 [DBG] Loaded hosting startup assembly Test.Demo.Api
2020-05-04 13:55:54.079 +08:00 [DBG] Executing HealthCheck collector HostedService.
2020-05-04 13:55:54.108 +08:00 [DBG] Connection id "0HLVFTV7BUGVN" received FIN.
2020-05-04 13:55:54.118 +08:00 [DBG] Connection id "0HLVFTV7BUGVN" accepted.
2020-05-04 13:55:54.120 +08:00 [DBG] Connection id "0HLVFTV7BUGVN" started.
2020-05-04 13:55:54.123 +08:00 [INF] Entity Framework Core 3.1.3 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-05-04 13:55:54.137 +08:00 [DBG] Connection id "0HLVFTV7BUGVN" sending FIN because: "The client closed the connection."
2020-05-04 13:55:54.141 +08:00 [DBG] Connection id "0HLVFTV7BUGVN" disconnecting.
2020-05-04 13:55:54.145 +08:00 [DBG] Connection id "0HLVFTV7BUGVN" stopped.
2020-05-04 13:55:54.220 +08:00 [DBG] queryContext => new QueryingEnumerable<HealthCheckConfiguration>(
    (RelationalQueryContext)queryContext, 
    RelationalCommandCache, 
    null, 
    null, 
    Func<QueryContext, DbDataReader, ResultContext, int[], ResultCoordinator, HealthCheckConfiguration>, 
    HealthChecks.UI.Core.Data.HealthChecksDb, 
    DiagnosticsLogger<Query>
)
2020-05-04 13:55:54.236 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:54.241 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2020-05-04 13:55:54.242 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:54.244 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:54.249 +08:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:55:54.255 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-05-04 13:55:54.260 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckConfiguration' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:54.265 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:54.266 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:54.268 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:54.274 +08:00 [INF] Start processing HTTP request GET "http://localhost:5000/health"
2020-05-04 13:55:54.280 +08:00 [VRB] Request Headers:

2020-05-04 13:55:54.282 +08:00 [INF] Sending HTTP request GET "http://localhost:5000/health"
2020-05-04 13:55:54.284 +08:00 [VRB] Request Headers:

2020-05-04 13:55:54.361 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-05-04 13:55:54.361 +08:00 [INF] Hosting environment: Development
2020-05-04 13:55:54.363 +08:00 [INF] Content root path: F:\自己代码库\NetPro\src\Test.Demo.Api
2020-05-04 13:55:54.365 +08:00 [DBG] Hosting started
2020-05-04 13:55:54.367 +08:00 [DBG] Connection id "0HLVFTV7BUGVO" accepted.
2020-05-04 13:55:54.368 +08:00 [DBG] Connection id "0HLVFTV7BUGVO" started.
2020-05-04 13:55:54.390 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/health  
2020-05-04 13:55:54.396 +08:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2020-05-04 13:55:54.396 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:55:54.401 +08:00 [DBG] The request path /health does not match a supported file type
2020-05-04 13:55:54.455 +08:00 [DBG] The request path  does not match the path filter
2020-05-04 13:55:54.462 +08:00 [DBG] Running health checks
2020-05-04 13:55:54.468 +08:00 [DBG] Running health check redis
2020-05-04 13:55:54.743 +08:00 [DBG] Connection id "0HLVFTV7BUGVP" accepted.
2020-05-04 13:55:54.743 +08:00 [DBG] Connection id "0HLVFTV7BUGVP" started.
2020-05-04 13:55:54.745 +08:00 [DBG] Connection id "0HLVFTV7BUGVQ" accepted.
2020-05-04 13:55:54.745 +08:00 [DBG] Connection id "0HLVFTV7BUGVQ" started.
2020-05-04 13:55:54.769 +08:00 [DBG] Health check redis completed after 294.952ms with status "Healthy" and 'null'
2020-05-04 13:55:54.788 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/index.html  
2020-05-04 13:55:54.788 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:55:54.797 +08:00 [DBG] Health check processing completed after 323.7447ms with combined status "Healthy"
2020-05-04 13:55:54.799 +08:00 [DBG] The request path /docs/index.html does not match an existing file
2020-05-04 13:55:54.824 +08:00 [DBG] Connection id "0HLVFTV7BUGVO" completed keep alive response.
2020-05-04 13:55:54.828 +08:00 [DBG] Connection id "0HLVFTV7BUGVP" completed keep alive response.
2020-05-04 13:55:54.832 +08:00 [INF] Request finished in 443.2418ms 200 application/json
2020-05-04 13:55:54.832 +08:00 [INF] Request finished in 43.6791ms 200 text/html;charset=utf-8
2020-05-04 13:55:54.892 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/custom.css  
2020-05-04 13:55:54.892 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:55:54.897 +08:00 [INF] Received HTTP response after 607.5583ms - "OK"
2020-05-04 13:55:54.902 +08:00 [DBG] The request path /custom.css does not match an existing file
2020-05-04 13:55:54.902 +08:00 [DBG] The request path  does not match the path filter
2020-05-04 13:55:54.910 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:55:54 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:55:54.910 +08:00 [INF] End processing HTTP request after 638.4663ms - "OK"
2020-05-04 13:55:54.911 +08:00 [VRB] Response Headers:
Date: Mon, 04 May 2020 05:55:54 GMT
Server: Kestrel
Cache-Control: no-store, no-cache
Pragma: no-cache
Transfer-Encoding: chunked
Content-Type: application/json
Expires: Thu, 01 Jan 1970 00:00:00 GMT

2020-05-04 13:55:54.948 +08:00 [DBG] No candidates found for the request path '/custom.css'
2020-05-04 13:55:54.950 +08:00 [DBG] Request did not match any endpoints
2020-05-04 13:55:54.964 +08:00 [DBG] Connection id "0HLVFTV7BUGVP" completed keep alive response.
2020-05-04 13:55:54.965 +08:00 [INF] Request finished in 71.6174ms 404 
2020-05-04 13:55:55.118 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/docs/v1/docs.json  
2020-05-04 13:55:55.118 +08:00 [VRB] All hosts are allowed.
2020-05-04 13:55:55.118 +08:00 [DBG] The request path /docs/v1/docs.json does not match an existing file
2020-05-04 13:55:55.168 +08:00 [DBG] queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<HealthCheckExecution>(
    asyncEnumerable: new QueryingEnumerable<HealthCheckExecution>(
        (RelationalQueryContext)queryContext, 
        RelationalCommandCache, 
        null, 
        null, 
        Func<QueryContext, DbDataReader, ResultContext, int[], ResultCoordinator, HealthCheckExecution>, 
        HealthChecks.UI.Core.Data.HealthChecksDb, 
        DiagnosticsLogger<Query>
    ), 
    cancellationToken: queryContext.CancellationToken)
2020-05-04 13:55:55.176 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:55.176 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:55.179 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.179 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.186 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:55.191 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:55.192 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:55.193 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.194 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.204 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2020-05-04 13:55:55.209 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:55.209 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:55.209 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.211 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.214 +08:00 [DBG] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:55.216 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__configuration_Name_0='?' (Size = 10)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-05-04 13:55:55.216 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:55.216 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.218 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.218 +08:00 [DBG] Creating a new HealthReport history.
2020-05-04 13:55:55.235 +08:00 [DBG] 'HealthChecksDb' generated a temporary value for the 'Id' property of new 'HealthCheckExecution' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:55.247 +08:00 [DBG] Connection id "0HLVFTV7BUGVP" completed keep alive response.
2020-05-04 13:55:55.247 +08:00 [INF] Request finished in 129.3837ms 200 application/json;charset=utf-8
2020-05-04 13:55:55.253 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecution' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:55.259 +08:00 [DBG] 'HealthChecksDb' generated a temporary value for the 'Id' property of new 'HealthCheckExecutionEntry' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:55.270 +08:00 [DBG] Context 'HealthChecksDb' started tracking 'HealthCheckExecutionEntry' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:55.271 +08:00 [DBG] SaveChanges starting for 'HealthChecksDb'.
2020-05-04 13:55:55.272 +08:00 [DBG] DetectChanges starting for 'HealthChecksDb'.
2020-05-04 13:55:55.289 +08:00 [DBG] DetectChanges completed for 'HealthChecksDb'.
2020-05-04 13:55:55.290 +08:00 [DBG] Opening connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.291 +08:00 [DBG] Opened connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.292 +08:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2020-05-04 13:55:55.294 +08:00 [DBG] Began transaction with isolation level 'Serializable'.
2020-05-04 13:55:55.298 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:55.298 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:55.302 +08:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 10), @p3='?', @p4='?', @p5='?' (Size = 7)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:55:55.304 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 10), @p3='?', @p4='?', @p5='?' (Size = 7)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:55:55.306 +08:00 [DBG] Foreign key property 'HealthCheckExecution.Id' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:55:55.311 +08:00 [DBG] Foreign key property 'HealthCheckExecutionEntry.HealthCheckExecutionId' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:55:55.315 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:55.317 +08:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2020-05-04 13:55:55.317 +08:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2020-05-04 13:55:55.317 +08:00 [DBG] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 5), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:55:55.320 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 5), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "rowid" = last_insert_rowid();
2020-05-04 13:55:55.323 +08:00 [DBG] Foreign key property 'HealthCheckExecutionEntry.Id' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2020-05-04 13:55:55.324 +08:00 [DBG] A data reader was disposed.
2020-05-04 13:55:55.325 +08:00 [DBG] Committing transaction.
2020-05-04 13:55:55.361 +08:00 [DBG] Committing transaction.
2020-05-04 13:55:55.362 +08:00 [DBG] Closing connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.374 +08:00 [DBG] Closed connection to database 'main' on server 'F:\自己代码库\NetPro\src\Test.Demo.Api\healthchecksdb'.
2020-05-04 13:55:55.374 +08:00 [DBG] Disposing transaction.
2020-05-04 13:55:55.381 +08:00 [DBG] An 'HealthCheckExecution' entity tracked by 'HealthChecksDb' changed from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:55.384 +08:00 [DBG] An 'HealthCheckExecutionEntry' entity tracked by 'HealthChecksDb' changed from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2020-05-04 13:55:55.384 +08:00 [DBG] SaveChanges completed for 'HealthChecksDb' with 2 entities written to the database.
2020-05-04 13:55:55.385 +08:00 [DBG] HealthReportCollector has completed.
2020-05-04 13:55:55.387 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2020-05-04 13:55:55.388 +08:00 [DBG] 'HealthChecksDb' disposed.
